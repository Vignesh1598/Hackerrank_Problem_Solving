#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the cavityMap function below.
def cavityMap(grid):
    j=1
    new_grid=[]
    for i in range(1,len(grid)-1):
        for j in range(1,len(grid[i])-1):
            try:
                if grid[i][j]>grid[i][j+1] and grid[i][j]>grid[i][j-1] and grid[i][j]>grid[i-1][j] and grid[i][j]>grid[i+1][j]:
                    grid[i][j]='X'
            except:
                continue
        #j+=1
    for i in grid:
        p=list(map(str,i))
        new_grid.append(''.join(p))
    return new_grid

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input())

    grid = []

    for _ in range(n):
        grid_item = input()
        l=list(grid_item)
        num=list(map(int,l))
        grid.append(num)

    result = cavityMap(grid)
    #for i in result:
        #print(i)
    fptr.write('\n'.join(result))
    fptr.write('\n')

    fptr.close()
